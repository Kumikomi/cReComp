
always @(posedge clk)begin
	if(rst_32)
		state_32 <= 0;
	else
		case (state_32)
			INIT_32: 		state_32 <= IDLE_32;
/*idle state*/
/*read state*/
/*write state*/
			CYCLE_END_32:										state_32 <= IDLE_32;
	default: state_32 <= INIT_32;
		endcase
end

/*read block for fifo_32*/

always @(posedge clk)begin
	if(rst_32)begin
/*user defined init*/
	end
	else if (rcv_en_32)begin
/*user defined rcv*/
	end
	else begin
/*user defined init*/
	end
end

always @(posedge clk)begin
	if(rst_32)begin
		snd_en_32 <= 0;
		rcv_en_32 <= 0;
	end
	else case (state_32)
/*en action*/
	endcase
end


/*user assign*/