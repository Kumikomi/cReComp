
always @(posedge clk)begin
	if(rst_32)
		state_32 <= 0;
	else
		case (state_32)
			INIT_32: 		state_32 <= IDLE_32;
/*idle state*/
/*read state*/
/*write state*/
	default: state <= INIT_32;
		endcase
end

/*read block for fifo_32*/

always @(posedge clk)begin
	if(rst_32)begin
/*user defined init*/
	end
	else if (state_32 > READY_RCV_32 && POSE_32 > state_32)begin
/*user defined rcv*/
	end
end

always @(posedge clk)begin
	if(rst_32)begin
		snd_en_32 <= 0;
		rcv_en_32 <= 0;
	end
	else case (state_32)
		READY_RCV_32: if(data_empty_32 == 0) 	rcv_en_32 <= 1;
		RCV_DATA_32_0: rcv_en_32 <= 0;
		READY_SND_32: 	if(data_full_32 == 0)	snd_en_32 <= 1;
		SND_DATA_32_0: snd_en_32 <= 0;
	endcase
end


/*user assign*/