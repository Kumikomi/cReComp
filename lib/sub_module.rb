class SubModule
	def gen_inst(flag, fo)
		i = 0
		j = 0
		assign_port = []
		assign_port = flag.get_assign_port
		# puts assign_port
		while i < flag.get_sub_module.count
			
			sub_module_name = flag.get_sub_module[i].to_s.split(" ")
			fo_s = open("devel/#{sub_module_name[0]}.v" , "r")
			fo.puts "\n\n//instance for #{sub_module_name[0]}"

			l = ""
			while true
				l = fo_s.gets.chomp
				if l == "//this code was generated by cReComp"
					flag_ok = 1
					break
				elsif l == ");"
					break
				end
			end
			l = ""
			once = 0
			if flag_ok == 1
				fo.puts "#{sub_module_name[0]} #{sub_module_name[1]}\n\(\n"
				while l = fo_s.gets.chomp

					# puts assign_port_stack
					sub_port = l.split(" ")
					if sub_port[0] == ");"
						break
					elsif sub_port[0] == "input" || sub_port[0] == "output" || sub_port[0] == "inout"
						if once != 0
							fo.print ",\n"
						end
					end
					
					if sub_port[0] == "input" || sub_port[0] == "output" || sub_port[0] == "inout"
						str = assign_port[j].to_s.delete("\""+"["+"]").split("=")

						if sub_port[2] != nil
							if str[0] == sub_port[2].to_s.delete(",")
								fo.print ".#{sub_port[2].to_s.delete(",")}(#{str[1]})"
								j = j + 1
							elsif sub_port[2].to_s.delete(",") == "rst" 
								if flag.get_use_fifo_32
									fo.print ".#{sub_port[2].to_s.delete(",")}(rst_32)"
								elsif flag.get_use_fifo_8
									fo.print ".#{sub_port[2].to_s.delete(",")}(rst_8)"
								end
							elsif sub_port[2].to_s.delete(",") != "clk" && str[0] != "rst"
								fo.print ".#{sub_port[2].to_s.delete(",")}(#{sub_port[2].to_s.delete(",")}_#{sub_module_name[1]})"
							else
								fo.print ".#{sub_port[2].to_s.delete(",")}(#{sub_port[2].to_s.delete(",")})"
							end
						
						else
							if sub_port[1].to_s.delete(",") == "rst" 
								if flag.get_use_fifo_32
									fo.print ".#{sub_port[1].to_s.delete(",")}(rst_32)"
								elsif flag.get_use_fifo_8
									fo.print ".#{sub_port[1].to_s.delete(",")}(rst_8)"
								end
							else
								fo.print ".#{sub_port[1].to_s.delete(",")}(#{sub_port[1].to_s.delete(",")})"
							end
						end
						
						once = 1;
					end

				end
				fo.puts "\n);"
			end
			i = i + 1
		end
	end
end