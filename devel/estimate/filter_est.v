// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="filter_est,hls_ip_2014_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.465000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=6,HLS_SYN_FF=4772,HLS_SYN_LUT=6753}" *)

module filter_est (
	input   ap_clk,
	input   ap_rst,
	input   ap_start,
	output   ap_done,
	output   ap_idle,
	output   ap_ready,
	input  [31:0] max,
	output  [31:0] ap_return
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 46'b1;
parameter    ap_ST_st2_fsm_1 = 46'b10;
parameter    ap_ST_st3_fsm_2 = 46'b100;
parameter    ap_ST_st4_fsm_3 = 46'b1000;
parameter    ap_ST_st5_fsm_4 = 46'b10000;
parameter    ap_ST_st6_fsm_5 = 46'b100000;
parameter    ap_ST_st7_fsm_6 = 46'b1000000;
parameter    ap_ST_st8_fsm_7 = 46'b10000000;
parameter    ap_ST_st9_fsm_8 = 46'b100000000;
parameter    ap_ST_st10_fsm_9 = 46'b1000000000;
parameter    ap_ST_st11_fsm_10 = 46'b10000000000;
parameter    ap_ST_st12_fsm_11 = 46'b100000000000;
parameter    ap_ST_st13_fsm_12 = 46'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 46'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 46'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 46'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 46'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 46'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 46'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 46'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 46'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 46'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 46'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 46'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 46'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 46'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 46'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 46'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 46'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 46'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 46'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 46'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 46'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 46'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 46'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 46'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 46'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 46'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 46'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 46'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 46'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 46'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 46'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 46'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 46'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 46'b1000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_2B = 32'b101011;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_2C = 32'b101100;
parameter    ap_const_lv31_0 = 31'b0000000000000000000000000000000;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_2D = 32'b101101;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv64_9 = 64'b1001;
parameter    ap_const_lv32_3F800000 = 32'b111111100000000000000000000000;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_42C80000 = 32'b1000010110010000000000000000000;
parameter    ap_const_lv32_43030000 = 32'b1000011000000110000000000000000;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv31_1 = 31'b1;
parameter    ap_const_lv32_64 = 32'b1100100;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv4_A = 4'b1010;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_true = 1'b1;

// input   ap_clk;
// input   ap_rst;
// input   ap_start;
// output   ap_done;
// output   ap_idle;
// output   ap_ready;
// input  [31:0] max;
// output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
(* fsm_encoding = "none" *) reg   [45:0] ap_CS_fsm = 46'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_62;
reg   [31:0] count = 32'b00000000000000000000000000000000;
reg   [31:0] sum_x = 32'b00000000000000000000000000000000;
reg   [31:0] sum_y = 32'b00000000000000000000000000000000;
reg   [31:0] sum_z = 32'b00000000000000000000000000000000;
reg   [31:0] ptr_0 = 32'b00000000000000000000000000000000;
wire   [31:0] grp_fu_251_p2;
reg   [31:0] reg_294;
reg    ap_sig_cseq_ST_st23_fsm_22;
reg    ap_sig_bdd_83;
reg    ap_sig_cseq_ST_st44_fsm_43;
reg    ap_sig_bdd_90;
wire   [31:0] grp_fu_256_p2;
reg   [31:0] reg_300;
wire   [31:0] grp_fu_261_p2;
reg   [31:0] reg_306;
wire   [3:0] buff_x_addr_1_gep_fu_74_p3;
reg   [3:0] buff_x_addr_1_reg_450;
wire   [3:0] buff_y_addr_1_gep_fu_82_p3;
reg   [3:0] buff_y_addr_1_reg_455;
wire   [3:0] buff_z_addr_1_gep_fu_90_p3;
reg   [3:0] buff_z_addr_1_reg_460;
wire   [30:0] tmp_s_fu_321_p2;
reg   [30:0] tmp_s_reg_468;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_115;
wire   [0:0] tmp_i_fu_331_p2;
reg   [0:0] tmp_i_reg_473;
wire   [0:0] tmp_fu_316_p2;
wire   [31:0] grp_fu_275_p1;
reg   [31:0] tmp_6_i_reg_492;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_140;
wire   [31:0] grp_fu_278_p1;
reg   [31:0] tmp_i_3_reg_497;
wire   [31:0] grp_fu_281_p1;
reg   [31:0] tmp_5_i_reg_502;
wire   [31:0] grp_fu_236_p2;
reg   [31:0] offset_gy_temp_x_reg_507;
reg    ap_sig_cseq_ST_st28_fsm_27;
reg    ap_sig_bdd_153;
wire   [31:0] grp_fu_241_p2;
reg   [31:0] offset_gy_temp_y_reg_512;
wire   [31:0] grp_fu_246_p2;
reg   [31:0] offset_gy_temp_z_reg_517;
wire   [0:0] tmp_i1_fu_394_p2;
reg   [0:0] tmp_i1_reg_522;
wire   [3:0] i_1_fu_425_p2;
reg   [3:0] i_1_reg_529;
reg    ap_sig_cseq_ST_st45_fsm_44;
reg    ap_sig_bdd_168;
wire   [0:0] exitcond_i_fu_419_p2;
reg   [3:0] buff_x_address0;
reg    buff_x_ce0;
reg    buff_x_we0;
reg   [31:0] buff_x_d0;
wire   [31:0] buff_x_q0;
reg   [3:0] buff_y_address0;
reg    buff_y_ce0;
reg    buff_y_we0;
reg   [31:0] buff_y_d0;
wire   [31:0] buff_y_q0;
reg   [3:0] buff_z_address0;
reg    buff_z_ce0;
reg    buff_z_we0;
reg   [31:0] buff_z_d0;
wire   [31:0] buff_z_q0;
reg   [30:0] i_reg_176;
reg   [31:0] offset_gy_z_phi_fu_191_p4;
reg   [31:0] offset_gy_z_reg_187;
reg    ap_sig_cseq_ST_st29_fsm_28;
reg    ap_sig_bdd_227;
reg   [31:0] offset_gy_y_phi_fu_203_p4;
reg   [31:0] offset_gy_y_reg_199;
reg   [31:0] offset_gy_x_phi_fu_215_p4;
reg   [31:0] offset_gy_x_reg_211;
reg   [3:0] i_i_reg_223;
reg    ap_sig_cseq_ST_st46_fsm_45;
reg    ap_sig_bdd_242;
wire  signed [63:0] tmp_i1_4_fu_400_p1;
wire   [63:0] tmp_18_i_fu_431_p1;
wire   [63:0] tmp_19_i_fu_438_p1;
wire   [31:0] tmp_4_i_fu_378_p2;
wire   [31:0] tmp_1_i_fu_342_p2;
wire   [31:0] tmp_2_i_fu_354_p2;
wire   [31:0] tmp_3_i_fu_366_p2;
wire   [31:0] tmp_17_i_fu_407_p2;
wire   [31:0] grp_fu_236_p0;
wire   [31:0] grp_fu_236_p1;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_bdd_289;
wire   [31:0] grp_fu_241_p0;
wire   [31:0] grp_fu_241_p1;
wire   [31:0] grp_fu_246_p0;
wire   [31:0] grp_fu_246_p1;
reg   [31:0] grp_fu_251_p0;
reg   [31:0] grp_fu_251_p1;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_304;
reg   [31:0] grp_fu_256_p0;
reg   [31:0] grp_fu_256_p1;
reg   [31:0] grp_fu_261_p0;
reg   [31:0] grp_fu_261_p1;
wire   [31:0] grp_fu_275_p0;
wire   [31:0] grp_fu_278_p0;
wire   [31:0] grp_fu_281_p0;
wire   [31:0] i_cast_fu_312_p1;
wire    grp_fu_236_ce;
wire    grp_fu_241_ce;
wire    grp_fu_246_ce;
wire    grp_fu_251_ce;
wire    grp_fu_256_ce;
wire    grp_fu_261_ce;
wire    grp_fu_275_ce;
wire    grp_fu_278_ce;
wire    grp_fu_281_ce;
reg   [45:0] ap_NS_fsm;


filter_est_buff_x #(
	.DataWidth( 32 ),
	.AddressRange( 10 ),
	.AddressWidth( 4 ))
buff_x_U(
	.clk( ap_clk ),
	.reset( ap_rst ),
	.address0( buff_x_address0 ),
	.ce0( buff_x_ce0 ),
	.we0( buff_x_we0 ),
	.d0( buff_x_d0 ),
	.q0( buff_x_q0 )
);

filter_est_buff_x #(
	.DataWidth( 32 ),
	.AddressRange( 10 ),
	.AddressWidth( 4 ))
buff_y_U(
	.clk( ap_clk ),
	.reset( ap_rst ),
	.address0( buff_y_address0 ),
	.ce0( buff_y_ce0 ),
	.we0( buff_y_we0 ),
	.d0( buff_y_d0 ),
	.q0( buff_y_q0 )
);

filter_est_buff_x #(
	.DataWidth( 32 ),
	.AddressRange( 10 ),
	.AddressWidth( 4 ))
buff_z_U(
	.clk( ap_clk ),
	.reset( ap_rst ),
	.address0( buff_z_address0 ),
	.ce0( buff_z_ce0 ),
	.we0( buff_z_we0 ),
	.d0( buff_z_d0 ),
	.q0( buff_z_q0 )
);

filter_est_fsub_32ns_32ns_32_5_full_dsp #(
	.ID( 1 ),
	.NUM_STAGE( 5 ),
	.din0_WIDTH( 32 ),
	.din1_WIDTH( 32 ),
	.dout_WIDTH( 32 ))
filter_est_fsub_32ns_32ns_32_5_full_dsp_U0(
	.clk( ap_clk ),
	.reset( ap_rst ),
	.din0( grp_fu_236_p0 ),
	.din1( grp_fu_236_p1 ),
	.ce( grp_fu_236_ce ),
	.dout( grp_fu_236_p2 )
);

filter_est_fsub_32ns_32ns_32_5_full_dsp #(
	.ID( 1 ),
	.NUM_STAGE( 5 ),
	.din0_WIDTH( 32 ),
	.din1_WIDTH( 32 ),
	.dout_WIDTH( 32 ))
filter_est_fsub_32ns_32ns_32_5_full_dsp_U1(
	.clk( ap_clk ),
	.reset( ap_rst ),
	.din0( grp_fu_241_p0 ),
	.din1( grp_fu_241_p1 ),
	.ce( grp_fu_241_ce ),
	.dout( grp_fu_241_p2 )
);

filter_est_fsub_32ns_32ns_32_5_full_dsp #(
	.ID( 1 ),
	.NUM_STAGE( 5 ),
	.din0_WIDTH( 32 ),
	.din1_WIDTH( 32 ),
	.dout_WIDTH( 32 ))
filter_est_fsub_32ns_32ns_32_5_full_dsp_U2(
	.clk( ap_clk ),
	.reset( ap_rst ),
	.din0( grp_fu_246_p0 ),
	.din1( grp_fu_246_p1 ),
	.ce( grp_fu_246_ce ),
	.dout( grp_fu_246_p2 )
);

filter_est_fdiv_32ns_32ns_32_16 #(
	.ID( 1 ),
	.NUM_STAGE( 16 ),
	.din0_WIDTH( 32 ),
	.din1_WIDTH( 32 ),
	.dout_WIDTH( 32 ))
filter_est_fdiv_32ns_32ns_32_16_U3(
	.clk( ap_clk ),
	.reset( ap_rst ),
	.din0( grp_fu_251_p0 ),
	.din1( grp_fu_251_p1 ),
	.ce( grp_fu_251_ce ),
	.dout( grp_fu_251_p2 )
);

filter_est_fdiv_32ns_32ns_32_16 #(
	.ID( 1 ),
	.NUM_STAGE( 16 ),
	.din0_WIDTH( 32 ),
	.din1_WIDTH( 32 ),
	.dout_WIDTH( 32 ))
filter_est_fdiv_32ns_32ns_32_16_U4(
	.clk( ap_clk ),
	.reset( ap_rst ),
	.din0( grp_fu_256_p0 ),
	.din1( grp_fu_256_p1 ),
	.ce( grp_fu_256_ce ),
	.dout( grp_fu_256_p2 )
);

filter_est_fdiv_32ns_32ns_32_16 #(
	.ID( 1 ),
	.NUM_STAGE( 16 ),
	.din0_WIDTH( 32 ),
	.din1_WIDTH( 32 ),
	.dout_WIDTH( 32 ))
filter_est_fdiv_32ns_32ns_32_16_U5(
	.clk( ap_clk ),
	.reset( ap_rst ),
	.din0( grp_fu_261_p0 ),
	.din1( grp_fu_261_p1 ),
	.ce( grp_fu_261_ce ),
	.dout( grp_fu_261_p2 )
);

filter_est_sitofp_32ns_32_6 #(
	.ID( 1 ),
	.NUM_STAGE( 6 ),
	.din0_WIDTH( 32 ),
	.dout_WIDTH( 32 ))
filter_est_sitofp_32ns_32_6_U6(
	.clk( ap_clk ),
	.reset( ap_rst ),
	.din0( grp_fu_275_p0 ),
	.ce( grp_fu_275_ce ),
	.dout( grp_fu_275_p1 )
);

filter_est_sitofp_32ns_32_6 #(
	.ID( 1 ),
	.NUM_STAGE( 6 ),
	.din0_WIDTH( 32 ),
	.dout_WIDTH( 32 ))
filter_est_sitofp_32ns_32_6_U7(
	.clk( ap_clk ),
	.reset( ap_rst ),
	.din0( grp_fu_278_p0 ),
	.ce( grp_fu_278_ce ),
	.dout( grp_fu_278_p1 )
);

filter_est_sitofp_32ns_32_6 #(
	.ID( 1 ),
	.NUM_STAGE( 6 ),
	.din0_WIDTH( 32 ),
	.dout_WIDTH( 32 ))
filter_est_sitofp_32ns_32_6_U8(
	.clk( ap_clk ),
	.reset( ap_rst ),
	.din0( grp_fu_281_p0 ),
	.ce( grp_fu_281_ce ),
	.dout( grp_fu_281_p1 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
	if (ap_rst == 1'b1) begin
		ap_CS_fsm <= ap_ST_st1_fsm_0;
	end else begin
		ap_CS_fsm <= ap_NS_fsm;
	end
end

/// assign process. ///
always @(posedge ap_clk)
begin
	if (((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43) & (ap_const_lv1_0 == tmp_i1_fu_394_p2))) begin
		i_i_reg_223 <= ap_const_lv4_0;
	end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st46_fsm_45)) begin
		i_i_reg_223 <= i_1_reg_529;
	end
end

/// assign process. ///
always @(posedge ap_clk)
begin
	if (((ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44) & (~(ap_const_lv1_0 == tmp_i1_reg_522) | ~(ap_const_lv1_0 == exitcond_i_fu_419_p2)))) begin
		i_reg_176 <= tmp_s_reg_468;
	end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
		i_reg_176 <= ap_const_lv31_0;
	end
end

/// assign process. ///
always @(posedge ap_clk)
begin
	if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) & (tmp_i_reg_473 == ap_const_lv1_0))) begin
		offset_gy_x_reg_211 <= offset_gy_temp_x_reg_507;
	end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(tmp_fu_316_p2 == ap_const_lv1_0) & ~(tmp_i_fu_331_p2 == ap_const_lv1_0))) begin
		offset_gy_x_reg_211 <= ap_const_lv32_0;
	end
end

/// assign process. ///
always @(posedge ap_clk)
begin
	if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) & (tmp_i_reg_473 == ap_const_lv1_0))) begin
		offset_gy_y_reg_199 <= offset_gy_temp_y_reg_512;
	end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(tmp_fu_316_p2 == ap_const_lv1_0) & ~(tmp_i_fu_331_p2 == ap_const_lv1_0))) begin
		offset_gy_y_reg_199 <= ap_const_lv32_0;
	end
end

/// assign process. ///
always @(posedge ap_clk)
begin
	if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) & (tmp_i_reg_473 == ap_const_lv1_0))) begin
		offset_gy_z_reg_187 <= offset_gy_temp_z_reg_517;
	end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(tmp_fu_316_p2 == ap_const_lv1_0) & ~(tmp_i_fu_331_p2 == ap_const_lv1_0))) begin
		offset_gy_z_reg_187 <= ap_const_lv32_0;
	end
end

/// assign process. ///
always @(posedge ap_clk)
begin
	if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(tmp_fu_316_p2 == ap_const_lv1_0) & ~(tmp_i_fu_331_p2 == ap_const_lv1_0))) begin
		count <= tmp_4_i_fu_378_p2;
		sum_x <= tmp_1_i_fu_342_p2;
		sum_y <= tmp_2_i_fu_354_p2;
		sum_z <= tmp_3_i_fu_366_p2;
	end
end

/// assign process. ///
always @(posedge ap_clk)
begin
	if (((ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44) & (ap_const_lv1_0 == tmp_i1_reg_522))) begin
		i_1_reg_529 <= i_1_fu_425_p2;
	end
end

/// assign process. ///
always @(posedge ap_clk)
begin
	if ((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27)) begin
		offset_gy_temp_x_reg_507 <= grp_fu_236_p2;
		offset_gy_temp_y_reg_512 <= grp_fu_241_p2;
		offset_gy_temp_z_reg_517 <= grp_fu_246_p2;
	end
end

/// assign process. ///
always @(posedge ap_clk)
begin
	if (((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43) & ~(ap_const_lv1_0 == tmp_i1_fu_394_p2))) begin
		ptr_0 <= tmp_17_i_fu_407_p2;
	end
end

/// assign process. ///
always @(posedge ap_clk)
begin
	if (((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22) | (ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43))) begin
		reg_294 <= grp_fu_251_p2;
		reg_300 <= grp_fu_256_p2;
		reg_306 <= grp_fu_261_p2;
	end
end

/// assign process. ///
always @(posedge ap_clk)
begin
	if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
		tmp_5_i_reg_502 <= grp_fu_281_p1;
		tmp_6_i_reg_492 <= grp_fu_275_p1;
		tmp_i_3_reg_497 <= grp_fu_278_p1;
	end
end

/// assign process. ///
always @(posedge ap_clk)
begin
	if ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43)) begin
		tmp_i1_reg_522 <= tmp_i1_fu_394_p2;
	end
end

/// assign process. ///
always @(posedge ap_clk)
begin
	if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(tmp_fu_316_p2 == ap_const_lv1_0))) begin
		tmp_i_reg_473 <= tmp_i_fu_331_p2;
	end
end

/// assign process. ///
always @(posedge ap_clk)
begin
	if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
		tmp_s_reg_468 <= tmp_s_fu_321_p2;
	end
end

/// ap_done assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or tmp_fu_316_p2)
begin
	if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (tmp_fu_316_p2 == ap_const_lv1_0))) begin
		ap_done = ap_const_logic_1;
	end else begin
		ap_done = ap_const_logic_0;
	end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
	if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
		ap_idle = ap_const_logic_1;
	end else begin
		ap_idle = ap_const_logic_0;
	end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or tmp_fu_316_p2)
begin
	if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (tmp_fu_316_p2 == ap_const_lv1_0))) begin
		ap_ready = ap_const_logic_1;
	end else begin
		ap_ready = ap_const_logic_0;
	end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_62)
begin
	if (ap_sig_bdd_62) begin
		ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
	end else begin
		ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
	end
end

/// ap_sig_cseq_ST_st23_fsm_22 assign process. ///
always @ (ap_sig_bdd_83)
begin
	if (ap_sig_bdd_83) begin
		ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_1;
	end else begin
		ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_0;
	end
end

/// ap_sig_cseq_ST_st24_fsm_23 assign process. ///
always @ (ap_sig_bdd_289)
begin
	if (ap_sig_bdd_289) begin
		ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_1;
	end else begin
		ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_0;
	end
end

/// ap_sig_cseq_ST_st28_fsm_27 assign process. ///
always @ (ap_sig_bdd_153)
begin
	if (ap_sig_bdd_153) begin
		ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_1;
	end else begin
		ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_0;
	end
end

/// ap_sig_cseq_ST_st29_fsm_28 assign process. ///
always @ (ap_sig_bdd_227)
begin
	if (ap_sig_bdd_227) begin
		ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_1;
	end else begin
		ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_0;
	end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_115)
begin
	if (ap_sig_bdd_115) begin
		ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
	end else begin
		ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
	end
end

/// ap_sig_cseq_ST_st44_fsm_43 assign process. ///
always @ (ap_sig_bdd_90)
begin
	if (ap_sig_bdd_90) begin
		ap_sig_cseq_ST_st44_fsm_43 = ap_const_logic_1;
	end else begin
		ap_sig_cseq_ST_st44_fsm_43 = ap_const_logic_0;
	end
end

/// ap_sig_cseq_ST_st45_fsm_44 assign process. ///
always @ (ap_sig_bdd_168)
begin
	if (ap_sig_bdd_168) begin
		ap_sig_cseq_ST_st45_fsm_44 = ap_const_logic_1;
	end else begin
		ap_sig_cseq_ST_st45_fsm_44 = ap_const_logic_0;
	end
end

/// ap_sig_cseq_ST_st46_fsm_45 assign process. ///
always @ (ap_sig_bdd_242)
begin
	if (ap_sig_bdd_242) begin
		ap_sig_cseq_ST_st46_fsm_45 = ap_const_logic_1;
	end else begin
		ap_sig_cseq_ST_st46_fsm_45 = ap_const_logic_0;
	end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_140)
begin
	if (ap_sig_bdd_140) begin
		ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
	end else begin
		ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
	end
end

/// ap_sig_cseq_ST_st8_fsm_7 assign process. ///
always @ (ap_sig_bdd_304)
begin
	if (ap_sig_bdd_304) begin
		ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
	end else begin
		ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
	end
end

/// buff_x_address0 assign process. ///
always @ (ap_sig_cseq_ST_st44_fsm_43 or buff_x_addr_1_reg_450 or tmp_i1_reg_522 or ap_sig_cseq_ST_st45_fsm_44 or exitcond_i_fu_419_p2 or ap_sig_cseq_ST_st46_fsm_45 or tmp_i1_4_fu_400_p1 or tmp_18_i_fu_431_p1 or tmp_19_i_fu_438_p1)
begin
	if ((ap_const_logic_1 == ap_sig_cseq_ST_st46_fsm_45)) begin
		buff_x_address0 = tmp_19_i_fu_438_p1;
	end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44) & (ap_const_lv1_0 == tmp_i1_reg_522) & ~(ap_const_lv1_0 == exitcond_i_fu_419_p2))) begin
		buff_x_address0 = buff_x_addr_1_reg_450;
	end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43)) begin
		buff_x_address0 = tmp_i1_4_fu_400_p1;
	end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44) & (ap_const_lv1_0 == tmp_i1_reg_522) & (ap_const_lv1_0 == exitcond_i_fu_419_p2))) begin
		buff_x_address0 = tmp_18_i_fu_431_p1;
	end else begin
		buff_x_address0 = 'bx;
	end
end

/// buff_x_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st44_fsm_43 or tmp_i1_reg_522 or ap_sig_cseq_ST_st45_fsm_44 or exitcond_i_fu_419_p2 or ap_sig_cseq_ST_st46_fsm_45)
begin
	if (((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43) | ((ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44) & (ap_const_lv1_0 == tmp_i1_reg_522) & (ap_const_lv1_0 == exitcond_i_fu_419_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st46_fsm_45) | ((ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44) & (ap_const_lv1_0 == tmp_i1_reg_522) & ~(ap_const_lv1_0 == exitcond_i_fu_419_p2)))) begin
		buff_x_ce0 = ap_const_logic_1;
	end else begin
		buff_x_ce0 = ap_const_logic_0;
	end
end

/// buff_x_d0 assign process. ///
always @ (grp_fu_251_p2 or reg_294 or ap_sig_cseq_ST_st44_fsm_43 or tmp_i1_reg_522 or ap_sig_cseq_ST_st45_fsm_44 or exitcond_i_fu_419_p2 or buff_x_q0 or ap_sig_cseq_ST_st46_fsm_45)
begin
	if ((ap_const_logic_1 == ap_sig_cseq_ST_st46_fsm_45)) begin
		buff_x_d0 = buff_x_q0;
	end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44) & (ap_const_lv1_0 == tmp_i1_reg_522) & ~(ap_const_lv1_0 == exitcond_i_fu_419_p2))) begin
		buff_x_d0 = reg_294;
	end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43)) begin
		buff_x_d0 = grp_fu_251_p2;
	end else begin
		buff_x_d0 = 'bx;
	end
end

/// buff_x_we0 assign process. ///
always @ (ap_sig_cseq_ST_st44_fsm_43 or tmp_i1_fu_394_p2 or tmp_i1_reg_522 or ap_sig_cseq_ST_st45_fsm_44 or exitcond_i_fu_419_p2 or ap_sig_cseq_ST_st46_fsm_45)
begin
	if (((ap_const_logic_1 == ap_sig_cseq_ST_st46_fsm_45) | ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43) & ~(ap_const_lv1_0 == tmp_i1_fu_394_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44) & (ap_const_lv1_0 == tmp_i1_reg_522) & ~(ap_const_lv1_0 == exitcond_i_fu_419_p2)))) begin
		buff_x_we0 = ap_const_logic_1;
	end else begin
		buff_x_we0 = ap_const_logic_0;
	end
end

/// buff_y_address0 assign process. ///
always @ (ap_sig_cseq_ST_st44_fsm_43 or buff_y_addr_1_reg_455 or tmp_i1_reg_522 or ap_sig_cseq_ST_st45_fsm_44 or exitcond_i_fu_419_p2 or ap_sig_cseq_ST_st46_fsm_45 or tmp_i1_4_fu_400_p1 or tmp_18_i_fu_431_p1 or tmp_19_i_fu_438_p1)
begin
	if ((ap_const_logic_1 == ap_sig_cseq_ST_st46_fsm_45)) begin
		buff_y_address0 = tmp_19_i_fu_438_p1;
	end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44) & (ap_const_lv1_0 == tmp_i1_reg_522) & ~(ap_const_lv1_0 == exitcond_i_fu_419_p2))) begin
		buff_y_address0 = buff_y_addr_1_reg_455;
	end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43)) begin
		buff_y_address0 = tmp_i1_4_fu_400_p1;
	end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44) & (ap_const_lv1_0 == tmp_i1_reg_522) & (ap_const_lv1_0 == exitcond_i_fu_419_p2))) begin
		buff_y_address0 = tmp_18_i_fu_431_p1;
	end else begin
		buff_y_address0 = 'bx;
	end
end

/// buff_y_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st44_fsm_43 or tmp_i1_reg_522 or ap_sig_cseq_ST_st45_fsm_44 or exitcond_i_fu_419_p2 or ap_sig_cseq_ST_st46_fsm_45)
begin
	if (((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43) | ((ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44) & (ap_const_lv1_0 == tmp_i1_reg_522) & (ap_const_lv1_0 == exitcond_i_fu_419_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st46_fsm_45) | ((ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44) & (ap_const_lv1_0 == tmp_i1_reg_522) & ~(ap_const_lv1_0 == exitcond_i_fu_419_p2)))) begin
		buff_y_ce0 = ap_const_logic_1;
	end else begin
		buff_y_ce0 = ap_const_logic_0;
	end
end

/// buff_y_d0 assign process. ///
always @ (ap_sig_cseq_ST_st44_fsm_43 or grp_fu_256_p2 or reg_300 or tmp_i1_reg_522 or ap_sig_cseq_ST_st45_fsm_44 or exitcond_i_fu_419_p2 or buff_y_q0 or ap_sig_cseq_ST_st46_fsm_45)
begin
	if ((ap_const_logic_1 == ap_sig_cseq_ST_st46_fsm_45)) begin
		buff_y_d0 = buff_y_q0;
	end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44) & (ap_const_lv1_0 == tmp_i1_reg_522) & ~(ap_const_lv1_0 == exitcond_i_fu_419_p2))) begin
		buff_y_d0 = reg_300;
	end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43)) begin
		buff_y_d0 = grp_fu_256_p2;
	end else begin
		buff_y_d0 = 'bx;
	end
end

/// buff_y_we0 assign process. ///
always @ (ap_sig_cseq_ST_st44_fsm_43 or tmp_i1_fu_394_p2 or tmp_i1_reg_522 or ap_sig_cseq_ST_st45_fsm_44 or exitcond_i_fu_419_p2 or ap_sig_cseq_ST_st46_fsm_45)
begin
	if (((ap_const_logic_1 == ap_sig_cseq_ST_st46_fsm_45) | ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43) & ~(ap_const_lv1_0 == tmp_i1_fu_394_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44) & (ap_const_lv1_0 == tmp_i1_reg_522) & ~(ap_const_lv1_0 == exitcond_i_fu_419_p2)))) begin
		buff_y_we0 = ap_const_logic_1;
	end else begin
		buff_y_we0 = ap_const_logic_0;
	end
end

/// buff_z_address0 assign process. ///
always @ (ap_sig_cseq_ST_st44_fsm_43 or buff_z_addr_1_reg_460 or tmp_i1_reg_522 or ap_sig_cseq_ST_st45_fsm_44 or exitcond_i_fu_419_p2 or ap_sig_cseq_ST_st46_fsm_45 or tmp_i1_4_fu_400_p1 or tmp_18_i_fu_431_p1 or tmp_19_i_fu_438_p1)
begin
	if ((ap_const_logic_1 == ap_sig_cseq_ST_st46_fsm_45)) begin
		buff_z_address0 = tmp_19_i_fu_438_p1;
	end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44) & (ap_const_lv1_0 == tmp_i1_reg_522) & ~(ap_const_lv1_0 == exitcond_i_fu_419_p2))) begin
		buff_z_address0 = buff_z_addr_1_reg_460;
	end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43)) begin
		buff_z_address0 = tmp_i1_4_fu_400_p1;
	end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44) & (ap_const_lv1_0 == tmp_i1_reg_522) & (ap_const_lv1_0 == exitcond_i_fu_419_p2))) begin
		buff_z_address0 = tmp_18_i_fu_431_p1;
	end else begin
		buff_z_address0 = 'bx;
	end
end

/// buff_z_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st44_fsm_43 or tmp_i1_reg_522 or ap_sig_cseq_ST_st45_fsm_44 or exitcond_i_fu_419_p2 or ap_sig_cseq_ST_st46_fsm_45)
begin
	if (((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43) | ((ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44) & (ap_const_lv1_0 == tmp_i1_reg_522) & (ap_const_lv1_0 == exitcond_i_fu_419_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st46_fsm_45) | ((ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44) & (ap_const_lv1_0 == tmp_i1_reg_522) & ~(ap_const_lv1_0 == exitcond_i_fu_419_p2)))) begin
		buff_z_ce0 = ap_const_logic_1;
	end else begin
		buff_z_ce0 = ap_const_logic_0;
	end
end

/// buff_z_d0 assign process. ///
always @ (ap_sig_cseq_ST_st44_fsm_43 or grp_fu_261_p2 or reg_306 or tmp_i1_reg_522 or ap_sig_cseq_ST_st45_fsm_44 or exitcond_i_fu_419_p2 or buff_z_q0 or ap_sig_cseq_ST_st46_fsm_45)
begin
	if ((ap_const_logic_1 == ap_sig_cseq_ST_st46_fsm_45)) begin
		buff_z_d0 = buff_z_q0;
	end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44) & (ap_const_lv1_0 == tmp_i1_reg_522) & ~(ap_const_lv1_0 == exitcond_i_fu_419_p2))) begin
		buff_z_d0 = reg_306;
	end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43)) begin
		buff_z_d0 = grp_fu_261_p2;
	end else begin
		buff_z_d0 = 'bx;
	end
end

/// buff_z_we0 assign process. ///
always @ (ap_sig_cseq_ST_st44_fsm_43 or tmp_i1_fu_394_p2 or tmp_i1_reg_522 or ap_sig_cseq_ST_st45_fsm_44 or exitcond_i_fu_419_p2 or ap_sig_cseq_ST_st46_fsm_45)
begin
	if (((ap_const_logic_1 == ap_sig_cseq_ST_st46_fsm_45) | ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43) & ~(ap_const_lv1_0 == tmp_i1_fu_394_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44) & (ap_const_lv1_0 == tmp_i1_reg_522) & ~(ap_const_lv1_0 == exitcond_i_fu_419_p2)))) begin
		buff_z_we0 = ap_const_logic_1;
	end else begin
		buff_z_we0 = ap_const_logic_0;
	end
end

/// grp_fu_251_p0 assign process. ///
always @ (tmp_6_i_reg_492 or ap_sig_cseq_ST_st29_fsm_28 or offset_gy_x_phi_fu_215_p4 or ap_sig_cseq_ST_st8_fsm_7)
begin
	if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
		grp_fu_251_p0 = offset_gy_x_phi_fu_215_p4;
	end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
		grp_fu_251_p0 = tmp_6_i_reg_492;
	end else begin
		grp_fu_251_p0 = 'bx;
	end
end

/// grp_fu_251_p1 assign process. ///
always @ (ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st8_fsm_7)
begin
	if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
		grp_fu_251_p1 = ap_const_lv32_43030000;
	end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
		grp_fu_251_p1 = ap_const_lv32_42C80000;
	end else begin
		grp_fu_251_p1 = 'bx;
	end
end

/// grp_fu_256_p0 assign process. ///
always @ (tmp_i_3_reg_497 or ap_sig_cseq_ST_st29_fsm_28 or offset_gy_y_phi_fu_203_p4 or ap_sig_cseq_ST_st8_fsm_7)
begin
	if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
		grp_fu_256_p0 = offset_gy_y_phi_fu_203_p4;
	end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
		grp_fu_256_p0 = tmp_i_3_reg_497;
	end else begin
		grp_fu_256_p0 = 'bx;
	end
end

/// grp_fu_256_p1 assign process. ///
always @ (ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st8_fsm_7)
begin
	if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
		grp_fu_256_p1 = ap_const_lv32_43030000;
	end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
		grp_fu_256_p1 = ap_const_lv32_42C80000;
	end else begin
		grp_fu_256_p1 = 'bx;
	end
end

/// grp_fu_261_p0 assign process. ///
always @ (tmp_5_i_reg_502 or offset_gy_z_phi_fu_191_p4 or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st8_fsm_7)
begin
	if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
		grp_fu_261_p0 = offset_gy_z_phi_fu_191_p4;
	end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
		grp_fu_261_p0 = tmp_5_i_reg_502;
	end else begin
		grp_fu_261_p0 = 'bx;
	end
end

/// grp_fu_261_p1 assign process. ///
always @ (ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st8_fsm_7)
begin
	if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
		grp_fu_261_p1 = ap_const_lv32_43030000;
	end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
		grp_fu_261_p1 = ap_const_lv32_42C80000;
	end else begin
		grp_fu_261_p1 = 'bx;
	end
end

/// offset_gy_x_phi_fu_215_p4 assign process. ///
always @ (tmp_i_reg_473 or offset_gy_temp_x_reg_507 or ap_sig_cseq_ST_st29_fsm_28 or offset_gy_x_reg_211)
begin
	if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) & (tmp_i_reg_473 == ap_const_lv1_0))) begin
		offset_gy_x_phi_fu_215_p4 = offset_gy_temp_x_reg_507;
	end else begin
		offset_gy_x_phi_fu_215_p4 = offset_gy_x_reg_211;
	end
end

/// offset_gy_y_phi_fu_203_p4 assign process. ///
always @ (tmp_i_reg_473 or offset_gy_temp_y_reg_512 or ap_sig_cseq_ST_st29_fsm_28 or offset_gy_y_reg_199)
begin
	if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) & (tmp_i_reg_473 == ap_const_lv1_0))) begin
		offset_gy_y_phi_fu_203_p4 = offset_gy_temp_y_reg_512;
	end else begin
		offset_gy_y_phi_fu_203_p4 = offset_gy_y_reg_199;
	end
end

/// offset_gy_z_phi_fu_191_p4 assign process. ///
always @ (tmp_i_reg_473 or offset_gy_temp_z_reg_517 or offset_gy_z_reg_187 or ap_sig_cseq_ST_st29_fsm_28)
begin
	if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) & (tmp_i_reg_473 == ap_const_lv1_0))) begin
		offset_gy_z_phi_fu_191_p4 = offset_gy_temp_z_reg_517;
	end else begin
		offset_gy_z_phi_fu_191_p4 = offset_gy_z_reg_187;
	end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or tmp_i_fu_331_p2 or tmp_fu_316_p2 or tmp_i1_reg_522 or exitcond_i_fu_419_p2)
begin
	case (ap_CS_fsm)
		ap_ST_st1_fsm_0 : 
		begin
			if (~(ap_start == ap_const_logic_0)) begin
				ap_NS_fsm = ap_ST_st2_fsm_1;
			end else begin
				ap_NS_fsm = ap_ST_st1_fsm_0;
			end
		end
		ap_ST_st2_fsm_1 : 
		begin
			if ((tmp_fu_316_p2 == ap_const_lv1_0)) begin
				ap_NS_fsm = ap_ST_st1_fsm_0;
			end else if ((~(tmp_fu_316_p2 == ap_const_lv1_0) & ~(tmp_i_fu_331_p2 == ap_const_lv1_0))) begin
				ap_NS_fsm = ap_ST_st29_fsm_28;
			end else begin
				ap_NS_fsm = ap_ST_st3_fsm_2;
			end
		end
		ap_ST_st3_fsm_2 : 
		begin
			ap_NS_fsm = ap_ST_st4_fsm_3;
		end
		ap_ST_st4_fsm_3 : 
		begin
			ap_NS_fsm = ap_ST_st5_fsm_4;
		end
		ap_ST_st5_fsm_4 : 
		begin
			ap_NS_fsm = ap_ST_st6_fsm_5;
		end
		ap_ST_st6_fsm_5 : 
		begin
			ap_NS_fsm = ap_ST_st7_fsm_6;
		end
		ap_ST_st7_fsm_6 : 
		begin
			ap_NS_fsm = ap_ST_st8_fsm_7;
		end
		ap_ST_st8_fsm_7 : 
		begin
			ap_NS_fsm = ap_ST_st9_fsm_8;
		end
		ap_ST_st9_fsm_8 : 
		begin
			ap_NS_fsm = ap_ST_st10_fsm_9;
		end
		ap_ST_st10_fsm_9 : 
		begin
			ap_NS_fsm = ap_ST_st11_fsm_10;
		end
		ap_ST_st11_fsm_10 : 
		begin
			ap_NS_fsm = ap_ST_st12_fsm_11;
		end
		ap_ST_st12_fsm_11 : 
		begin
			ap_NS_fsm = ap_ST_st13_fsm_12;
		end
		ap_ST_st13_fsm_12 : 
		begin
			ap_NS_fsm = ap_ST_st14_fsm_13;
		end
		ap_ST_st14_fsm_13 : 
		begin
			ap_NS_fsm = ap_ST_st15_fsm_14;
		end
		ap_ST_st15_fsm_14 : 
		begin
			ap_NS_fsm = ap_ST_st16_fsm_15;
		end
		ap_ST_st16_fsm_15 : 
		begin
			ap_NS_fsm = ap_ST_st17_fsm_16;
		end
		ap_ST_st17_fsm_16 : 
		begin
			ap_NS_fsm = ap_ST_st18_fsm_17;
		end
		ap_ST_st18_fsm_17 : 
		begin
			ap_NS_fsm = ap_ST_st19_fsm_18;
		end
		ap_ST_st19_fsm_18 : 
		begin
			ap_NS_fsm = ap_ST_st20_fsm_19;
		end
		ap_ST_st20_fsm_19 : 
		begin
			ap_NS_fsm = ap_ST_st21_fsm_20;
		end
		ap_ST_st21_fsm_20 : 
		begin
			ap_NS_fsm = ap_ST_st22_fsm_21;
		end
		ap_ST_st22_fsm_21 : 
		begin
			ap_NS_fsm = ap_ST_st23_fsm_22;
		end
		ap_ST_st23_fsm_22 : 
		begin
			ap_NS_fsm = ap_ST_st24_fsm_23;
		end
		ap_ST_st24_fsm_23 : 
		begin
			ap_NS_fsm = ap_ST_st25_fsm_24;
		end
		ap_ST_st25_fsm_24 : 
		begin
			ap_NS_fsm = ap_ST_st26_fsm_25;
		end
		ap_ST_st26_fsm_25 : 
		begin
			ap_NS_fsm = ap_ST_st27_fsm_26;
		end
		ap_ST_st27_fsm_26 : 
		begin
			ap_NS_fsm = ap_ST_st28_fsm_27;
		end
		ap_ST_st28_fsm_27 : 
		begin
			ap_NS_fsm = ap_ST_st29_fsm_28;
		end
		ap_ST_st29_fsm_28 : 
		begin
			ap_NS_fsm = ap_ST_st30_fsm_29;
		end
		ap_ST_st30_fsm_29 : 
		begin
			ap_NS_fsm = ap_ST_st31_fsm_30;
		end
		ap_ST_st31_fsm_30 : 
		begin
			ap_NS_fsm = ap_ST_st32_fsm_31;
		end
		ap_ST_st32_fsm_31 : 
		begin
			ap_NS_fsm = ap_ST_st33_fsm_32;
		end
		ap_ST_st33_fsm_32 : 
		begin
			ap_NS_fsm = ap_ST_st34_fsm_33;
		end
		ap_ST_st34_fsm_33 : 
		begin
			ap_NS_fsm = ap_ST_st35_fsm_34;
		end
		ap_ST_st35_fsm_34 : 
		begin
			ap_NS_fsm = ap_ST_st36_fsm_35;
		end
		ap_ST_st36_fsm_35 : 
		begin
			ap_NS_fsm = ap_ST_st37_fsm_36;
		end
		ap_ST_st37_fsm_36 : 
		begin
			ap_NS_fsm = ap_ST_st38_fsm_37;
		end
		ap_ST_st38_fsm_37 : 
		begin
			ap_NS_fsm = ap_ST_st39_fsm_38;
		end
		ap_ST_st39_fsm_38 : 
		begin
			ap_NS_fsm = ap_ST_st40_fsm_39;
		end
		ap_ST_st40_fsm_39 : 
		begin
			ap_NS_fsm = ap_ST_st41_fsm_40;
		end
		ap_ST_st41_fsm_40 : 
		begin
			ap_NS_fsm = ap_ST_st42_fsm_41;
		end
		ap_ST_st42_fsm_41 : 
		begin
			ap_NS_fsm = ap_ST_st43_fsm_42;
		end
		ap_ST_st43_fsm_42 : 
		begin
			ap_NS_fsm = ap_ST_st44_fsm_43;
		end
		ap_ST_st44_fsm_43 : 
		begin
			ap_NS_fsm = ap_ST_st45_fsm_44;
		end
		ap_ST_st45_fsm_44 : 
		begin
			if ((~(ap_const_lv1_0 == tmp_i1_reg_522) | ~(ap_const_lv1_0 == exitcond_i_fu_419_p2))) begin
				ap_NS_fsm = ap_ST_st2_fsm_1;
			end else begin
				ap_NS_fsm = ap_ST_st46_fsm_45;
			end
		end
		ap_ST_st46_fsm_45 : 
		begin
			ap_NS_fsm = ap_ST_st45_fsm_44;
		end
		default : 
		begin
			ap_NS_fsm = 'bx;
		end
	endcase
end

assign ap_return = ap_const_lv32_0;

/// ap_sig_bdd_115 assign process. ///
always @ (ap_CS_fsm)
begin
	ap_sig_bdd_115 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_140 assign process. ///
always @ (ap_CS_fsm)
begin
	ap_sig_bdd_140 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_153 assign process. ///
always @ (ap_CS_fsm)
begin
	ap_sig_bdd_153 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1B]);
end

/// ap_sig_bdd_168 assign process. ///
always @ (ap_CS_fsm)
begin
	ap_sig_bdd_168 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2C]);
end

/// ap_sig_bdd_227 assign process. ///
always @ (ap_CS_fsm)
begin
	ap_sig_bdd_227 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1C]);
end

/// ap_sig_bdd_242 assign process. ///
always @ (ap_CS_fsm)
begin
	ap_sig_bdd_242 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2D]);
end

/// ap_sig_bdd_289 assign process. ///
always @ (ap_CS_fsm)
begin
	ap_sig_bdd_289 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_17]);
end

/// ap_sig_bdd_304 assign process. ///
always @ (ap_CS_fsm)
begin
	ap_sig_bdd_304 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_62 assign process. ///
always @ (ap_CS_fsm)
begin
	ap_sig_bdd_62 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_83 assign process. ///
always @ (ap_CS_fsm)
begin
	ap_sig_bdd_83 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_16]);
end

/// ap_sig_bdd_90 assign process. ///
always @ (ap_CS_fsm)
begin
	ap_sig_bdd_90 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2B]);
end
assign buff_x_addr_1_gep_fu_74_p3 = ap_const_lv64_9;
assign buff_y_addr_1_gep_fu_82_p3 = ap_const_lv64_9;
assign buff_z_addr_1_gep_fu_90_p3 = ap_const_lv64_9;
assign exitcond_i_fu_419_p2 = (i_i_reg_223 == ap_const_lv4_A? 1'b1: 1'b0);
assign grp_fu_236_ce = ap_const_logic_1;
assign grp_fu_236_p0 = ap_const_lv32_3F800000;
assign grp_fu_236_p1 = reg_294;
assign grp_fu_241_ce = ap_const_logic_1;
assign grp_fu_241_p0 = ap_const_lv32_3F800000;
assign grp_fu_241_p1 = reg_300;
assign grp_fu_246_ce = ap_const_logic_1;
assign grp_fu_246_p0 = ap_const_lv32_3F800000;
assign grp_fu_246_p1 = reg_306;
assign grp_fu_251_ce = ap_const_logic_1;
assign grp_fu_256_ce = ap_const_logic_1;
assign grp_fu_261_ce = ap_const_logic_1;
assign grp_fu_275_ce = ap_const_logic_1;
assign grp_fu_275_p0 = sum_x;
assign grp_fu_278_ce = ap_const_logic_1;
assign grp_fu_278_p0 = sum_y;
assign grp_fu_281_ce = ap_const_logic_1;
assign grp_fu_281_p0 = sum_z;
assign i_1_fu_425_p2 = (i_i_reg_223 + ap_const_lv4_1);
assign i_cast_fu_312_p1 = i_reg_176;
assign tmp_17_i_fu_407_p2 = (ptr_0 + ap_const_lv32_1);
assign tmp_18_i_fu_431_p1 = i_1_fu_425_p2;
assign tmp_19_i_fu_438_p1 = i_i_reg_223;
assign tmp_1_i_fu_342_p2 = (sum_x + ap_const_lv32_1);
assign tmp_2_i_fu_354_p2 = (sum_y + ap_const_lv32_1);
assign tmp_3_i_fu_366_p2 = (sum_z + ap_const_lv32_1);
assign tmp_4_i_fu_378_p2 = (count + ap_const_lv32_1);
assign tmp_fu_316_p2 = ($signed(i_cast_fu_312_p1) < $signed(max)? 1'b1: 1'b0);
assign tmp_i1_4_fu_400_p1 = $signed(ptr_0);
assign tmp_i1_fu_394_p2 = ($signed(ptr_0) < $signed(32'b1010)? 1'b1: 1'b0);
assign tmp_i_fu_331_p2 = ($signed(count) < $signed(32'b1100100)? 1'b1: 1'b0);
assign tmp_s_fu_321_p2 = (i_reg_176 + ap_const_lv31_1);
always @ (posedge ap_clk)
begin
	buff_x_addr_1_reg_450[3:0] <= 4'b1001;
	buff_y_addr_1_reg_455[3:0] <= 4'b1001;
	buff_z_addr_1_reg_460[3:0] <= 4'b1001;
end



endmodule //filter_est

